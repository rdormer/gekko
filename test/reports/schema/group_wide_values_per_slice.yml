# This is a relatively complex test case of properly displaying variables
# (in this case, day_open) on each row that are from a higher level of the schema
# For each row of the schema nested under the level with the specified variable, the value
# of that variable should be available to display in that row (i.e. each row in a day and ticker
# should have access to the day_open value for that group, which is computed at the root of that group)

# TO DO: for reasons I don't fully grasp yet this only seems to work with this specific case of slices
# likely because of the relatively complex evaluation rule for each_row in the schema, which I need to revisit

sources:
  mergesource:
    glob: test/fixtures/minutebars/*.csv
    file_column: filename
    defcolumns:
      - timestamp
      - open
      - high
      - low
      - close
      - volume

schemas:
  opening_prices:
    sources: mergesource
    each_row:
      - add_column('date', re.findall(r'[0-9]+-[0-9]+-[0-9]+', filename)[0])
      - add_column('ticker', re.findall(r'/([A-Z]+)-', filename)[0])
    template:
      date:
        ticker:
          eval:
            day_open: pluck(0, 'open')
            slice:
              - (low < day_open and close > day_open) or (high > day_open and close < day_open)
            data:
              slice:
                eval:
                  move_length: count()
                  day: pluck(0, 'date')
                  ticker: pluck(0, 'ticker')
                  number: pluck(0, 'slice')
                  max_high: max(high)
                  min_low: min(low)
                  data:
                    - '*'

output:
  schemas: opening_prices
  columns:
    - day
    - ticker
    - move_length
    - number
    - day_open
    - max_high
    - min_low
